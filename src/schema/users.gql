type User {
    uid: ID
    username: String
    fullname: String
    createdAt: DateTimeISO
    password: String
}

input UserInput {
    username: String
    fullname: String
    password: String
}

type UserResult {
    code: Int
    message: String
    success: Boolean
    payload: [User]
}

type UserExists {   
    message: String!
    username: String
}

union UserResult = User | NotFound | BadUserInput | Unauthorized | InternalServerError
union CreateUserResult = User | BadUserInput | InternalServerError | UserExists

type Query {
    getUser(uid: String!): UserResult
    getUsers: UserResult
}

type Mutation {
    createUser(
        form: UserInput!
    ): CreateUserResult
}